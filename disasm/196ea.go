package disasm

// Opcodes Setup
////////////////..........

// byte to mnemonic map
var mnemonics = map[byte]string{

	//0x00: "SKIP",
	0x01: "CLR",
	0x02: "NOT",
	0x03: "NEG",
	0x04: "XCH Direct",
	0x05: "DEC",
	0x06: "EXT",
	0x07: "INC",
	0x08: "SHR",
	0x09: "SHL",
	0x0A: "SHRA",
	0x0B: "XCH Indexed",
	0x0C: "SHRL",
	0x0D: "SHLL",
	0x0E: "SHRAL",
	0x0F: "NORML",
	0x10: "Reserved",
	0x11: "CLRB",
	0x12: "NOTB",
	0x13: "NEGB",
	0x14: "XCHB Direct",
	0x15: "DECB",
	0x16: "EXTB",
	0x17: "INCB",
	0x18: "SHRB",
	0x19: "SHLB",
	0x1A: "SHRAB",
	0x1B: "XCHB Indexed",
	0x1C: "EST Indirect",
	0x1D: "EST Indexed",
	0x1E: "ESTB Indirect",
	0x1F: "ESTB Indexed",
	0x20: "SJMP",
	0x21: "SJMP",
	0x22: "SJMP",
	0x23: "SJMP",
	0x24: "SJMP",
	0x25: "SJMP",
	0x26: "SJMP",
	0x27: "SJMP",
	0x28: "SCALL",
	0x29: "SCALL",
	0x2A: "SCALL",
	0x2B: "SCALL",
	0x2C: "SCALL",
	0x2D: "SCALL",
	0x2E: "SCALL",
	0x2F: "SCALL",
	0x30: "JBC",
	0x31: "JBC",
	0x32: "JBC",
	0x33: "JBC",
	0x34: "JBC",
	0x35: "JBC",
	0x36: "JBC",
	0x37: "JBC",
	0x38: "JBS",
	0x39: "JBS",
	0x3A: "JBS",
	0x3B: "JBS",
	0x3C: "JBS",
	0x3D: "JBS",
	0x3E: "JBS",
	0x3F: "JBS",
	0x40: "AND Direct (3 ops)",
	0x41: "AND Immediate (3 ops)",
	0x42: "AND Indirect (3 ops)",
	0x43: "AND Indexed (3 ops)",
	0x44: "ADD Direct (3 ops)",
	0x45: "ADD Immediate (3 ops)",
	0x46: "ADD Indirect (3 ops)",
	0x47: "ADD Indexed (3 ops)",
	0x48: "SUB Direct (3 ops)",
	0x49: "SUB Immediate (3 ops)",
	0x4A: "SUB Indirect (3 ops)",
	0x4B: "SUB Indexed (3 ops)",
	0x4C: "(Note 2) MUL, MULU Direct (3 ops)",
	0x4D: "(Note 2) MUL, MULU Immediate (3 ops)",
	0x4E: "(Note 2) MUL, MULU Indirect (3 ops)",
	0x4F: "(Note 2) MUL, MULU Indexed (3 ops)",
	0x50: "ANDB Direct (3 ops)",
	0x51: "ANDB Immediate (3 ops)",
	0x52: "ANDB Indirect (3 ops)",
	0x53: "ANDB Indexed (3 ops)",
	0x54: "ADDB Direct (3 ops)",
	0x55: "ADDB Immediate (3 ops)",
	0x56: "ADDB Indirect (3 ops)",
	0x57: "ADDB Indexed (3 ops)",
	0x58: "SUBB Direct (3 ops)",
	0x59: "SUBB Immediate (3 ops)",
	0x5A: "SUBB Indirect (3 ops)",
	0x5B: "SUBB Indexed (3 ops)",
	0x5C: "MULUB Direct (3 ops)",
	0x5D: "MULUB Immediate (3 ops)",
	0x5E: "MULUB Indirect (3 ops)",
	0x5F: "MULUB Indexed (3 ops)",
	0x60: "AND Direct (2 ops)",
	0x61: "AND Immediate (2 ops)",
	0x62: "AND Indirect (2 ops)",
	0x63: "AND Indexed (2 ops)",
	0x64: "ADD Direct (2 ops)",
	0x65: "ADD Immediate (2 ops)",
	0x66: "ADD Indirect (2 ops)",
	0x67: "ADD Indexed (2 ops)",
	0x68: "SUB Direct (2 ops)",
	0x69: "SUB Immediate (2 ops)",
	0x6A: "SUB Indirect (2 ops)",
	0x6B: "SUB Indexed (2 ops)",
	0x6C: "(Note 2) MUL, MULU Direct (2 ops)",
	0x6D: "(Note 2) MUL, MULU Immediate(2 ops)",
	0x6E: "(Note 2) MUL, MULU Indirect (2 ops)",
	0x6F: "(Note 2) MUL, MULU Indexed (2 ops)",
	0x70: "ANDB Direct (2 ops)",
	0x71: "ANDB Immediate (2 ops)",
	0x72: "ANDB Indirect (2 ops)",
	0x73: "ANDB Indexed (2 ops)",
	0x74: "ADDB Direct (2 ops)",
	0x75: "ADDB Immediate (2 ops)",
	0x76: "ADDB Indirect (2 ops)",
	0x77: "ADDB Indexed (2 ops)",
	0x78: "SUBB Direct (2 ops)",
	0x79: "SUBB Immediate (2 ops)",
	0x7A: "SUBB Indirect (2 ops)",
	0x7B: "SUBB Indexed (2 ops)",
	0x7C: "MULUB Direct (2 ops)",
	0x7D: "MULUB Immediate (2 ops)",
	0x7E: "MULUB Indirect (2 ops)",
	0x7F: "MULUB Indexed (2 ops)",
	0x80: "OR Direct",
	0x81: "OR Immediate",
	0x82: "OR Indirect",
	0x83: "OR Indexed",
	0x84: "XOR Direct",
	0x85: "XOR Immediate",
	0x86: "XOR Indirect",
	0x87: "XOR Indexed",
	0x88: "CMP Direct",
	0x89: "CMP Immediate",
	0x8A: "CMP Indirect",
	0x8B: "CMP Indexed",
	0x8C: "DIVU Direct",
	0x8D: "DIVU Immediate",
	0x8E: "DIVU Indirect",
	0x8F: "DIVU Indexed",
	0x90: "ORB Direct",
	0x91: "ORB Immediate",
	0x92: "ORB Indirect",
	0x93: "ORB Indexed",
	0x94: "XORB Direct",
	0x95: "XORB Immediate",
	0x96: "XORB Indirect",
	0x97: "XORB Indexed",
	0x98: "CMPB Direct",
	0x99: "CMPB Immediate",
	0x9A: "CMPB Indirect",
	0x9B: "CMPB Indexed",
	0x9C: "DIVUB Direct",
	0x9D: "DIVUB Immediate",
	0x9E: "DIVUB Indirect",
	0x9F: "DIVUB Indexed",
	0xA0: "LD Direct",
	0xA1: "LD Immediate",
	0xA2: "LD Indirect",
	0xA3: "LD Indexed",
	0xA4: "ADDC Direct",
	0xA5: "ADDC Immediate",
	0xA6: "ADDC Indirect",
	0xA7: "ADDC Indexed",
	0xA8: "SUBC Direct",
	0xA9: "SUBC Immediate",
	0xAA: "SUBC Indirect",
	0xAB: "SUBC Indexed",
	0xAC: "LDBZE Direct",
	0xAD: "LDBZE Immediate",
	0xAE: "LDBZE Indirect",
	0xAF: "LDBZE Indexed",
	0xB0: "LDB Direct",
	0xB1: "LDB Immediate",
	0xB2: "LDB Indirect",
	0xB3: "LDB Indexed",
	0xB4: "ADDCB Direct",
	0xB5: "ADDCB Immediate",
	0xB6: "ADDCB Indirect",
	0xB7: "ADDCB Indexed",
	0xB8: "SUBCB Direct",
	0xB9: "SUBCB Immediate",
	0xBA: "SUBCB Indirect",
	0xBB: "SUBCB Indexed",
	0xBC: "LDBSE Direct",
	0xBD: "LDBSE Immediate",
	0xBE: "LDBSE Indirect",
	0xBF: "LDBSE Indexed",
	0xC0: "ST Direct",
	0xC1: "BMOV",
	0xC2: "ST Indirect",
	0xC3: "ST Indexed",
	0xC4: "STB Direct",
	0xC5: "CMPL",
	0xC6: "STB Indirect",
	0xC7: "STB Indexed",
	0xC8: "PUSH Direct",
	0xC9: "PUSH Immediate",
	0xCA: "PUSH Indirect",
	0xCB: "PUSH Indexed",
	0xCC: "POP Direct",
	0xCD: "BMOVI",
	0xCE: "POP Indirect",
	0xCF: "POP Indexed",
	0xD0: "JNST",
	0xD1: "JNH",
	0xD2: "JGT",
	0xD3: "JNC",
	0xD4: "JNVT",
	0xD5: "JNV",
	0xD6: "JGE",
	0xD7: "JNE",
	0xD8: "JST",
	0xD9: "JH",
	0xDA: "JLE",
	0xDB: "JC",
	0xDC: "JVT",
	0xDD: "JV",
	0xDE: "JLT",
	0xDF: "JE",
	0xE0: "DJNZ",
	0xE1: "DJNZW",
	0xE2: "TIJMP",
	0xE3: "BR Indirect, 64-Kbyte mode / EBR Indirect, 2-Mbyte mode",
	0xE4: "EBMOVI",
	0xE5: "Reserved",
	0xE6: "EJMP",
	0xE7: "LJMP",
	0xE8: "ELD Indirect",
	0xE9: "ELD Indexed",
	0xEA: "ELDB Indirect",
	0xEB: "ELDB Indexed",
	0xEC: "DPTS",
	0xED: "EPTS",
	0xEE: "(Note 1) Reserved",
	0xEF: "LCALL",
	0xF0: "RET",
	0xF1: "ECALL",
	0xF2: "PUSHF",
	0xF3: "POPF",
	0xF4: "PUSHA",
	0xF5: "POPA",
	0xF6: "IDLPD",
	0xF7: "TRAP",
	0xF8: "CLRC",
	0xF9: "SETC",
	0xFA: "DI",
	0xFB: "EI",
	0xFC: "CLRVT",
	0xFD: "NOP",
	0xFE: "(Note 2) Prefix for signed multiplication and division.",
	//0xFF: "RST",
}

// byte to length
var lengths = map[byte]int{
	0x00: 2,
	0x01: 2,
	0x02: 2,
	0x03: 2,
	0x04: 3,
	0x05: 2,
	0x06: 2,
	0x07: 2,
	0x08: 3,
	0x09: 3,
	0x0A: 3,
	//0x0B:	,	//	4/5
	0x0C: 3,
	0x0D: 3,
	0x0E: 3,
	0x0F: 3,
	//0x10:	,	//	Reserved
	0x11: 2,
	0x12: 2,
	0x13: 2,
	0x14: 3,
	0x15: 2,
	0x16: 2,
	0x17: 2,
	0x18: 3,
	0x19: 3,
	0x1A: 3,
	//0x1B:	,	//	4/5
	0x1C: 3,
	0x1D: 6,
	0x1E: 3,
	0x1F: 6,
	0x20: 2,
	0x21: 2,
	0x22: 2,
	0x23: 2,
	0x24: 2,
	0x25: 2,
	0x26: 2,
	0x27: 2,
	0x28: 2,
	0x29: 2,
	0x2A: 2,
	0x2B: 2,
	0x2C: 2,
	0x2D: 2,
	0x2E: 2,
	0x2F: 2,
	0x30: 3,
	0x31: 3,
	0x32: 3,
	0x33: 3,
	0x34: 3,
	0x35: 3,
	0x36: 3,
	0x37: 3,
	0x38: 3,
	0x39: 3,
	0x3A: 3,
	0x3B: 3,
	0x3C: 3,
	0x3D: 3,
	0x3E: 3,
	0x3F: 3,
	0x40: 4,
	0x41: 5,
	0x42: 4,
	//0x43:	,	//	5/6
	0x44: 4,
	0x45: 5,
	0x46: 4,
	//0x47:	,	// 5/6
	0x48: 4,
	0x49: 5,
	0x4A: 4,
	//0x4B:	,	//	5/6
	0x4C: 4,
	0x4D: 5,
	0x4E: 4,
	//0x4F:	,	//	5/6
	0x50: 4,
	0x51: 4,
	0x52: 4,
	//0x53:	,	//	5/6
	0x54: 4,
	0x55: 4,
	0x56: 4,
	//0x57:	,	//	5/6
	0x58: 4,
	0x59: 4,
	0x5A: 4,
	//0x5B:	,	//	5/6
	0x5C: 4,
	0x5D: 4,
	0x5E: 4,
	//0x5F:	,	//	5/6
	0x60: 3,
	0x61: 4,
	0x62: 3,
	//0x63:	,	//	4/5
	0x64: 3,
	0x65: 4,
	0x66: 3,
	//0x67:	,	//	4/5
	0x68: 3,
	0x69: 4,
	0x6A: 3,
	//0x6B:	,	//	4/5
	0x6C: 3,
	0x6D: 4,
	0x6E: 3,
	//0x6F:	,	//	4/5
	0x70: 3,
	0x71: 3,
	0x72: 3,
	//0x73:	,	//	4/5
	0x74: 3,
	0x75: 3,
	0x76: 3,
	//0x77:	,	//	4/5
	0x78: 3,
	0x79: 3,
	0x7A: 3,
	//0x7B:	,	//	4/5
	0x7C: 3,
	0x7D: 3,
	0x7E: 3,
	//0x7F:	,	//	5/6
	0x80: 3,
	0x81: 4,
	0x82: 3,
	//0x83:	,	//	4/5
	0x84: 3,
	0x85: 4,
	0x86: 3,
	//0x87:	,	//	4/5
	0x88: 3,
	0x89: 4,
	0x8A: 3,
	//0x8B:	,	//	4/5
	0x8C: 3,
	0x8D: 4,
	0x8E: 3,
	//0x8F:	,	//	4/5
	0x90: 3,
	0x91: 3,
	0x92: 3,
	//0x93:	,	//	4/5
	0x94: 3,
	0x95: 3,
	0x96: 3,
	//0x97:	,	//	4/5
	0x98: 3,
	0x99: 3,
	0x9A: 3,
	//0x9B:	,	//	4/5
	0x9C: 3,
	0x9D: 3,
	0x9E: 3,
	//0x9F:	,	//	4/5
	0xA0: 3,
	0xA1: 4,
	0xA2: 3,
	//0xA3:	,	//	4/5
	0xA4: 3,
	0xA5: 4,
	0xA6: 3,
	//0xA7:	,	//	4/5
	0xA8: 3,
	0xA9: 4,
	0xAA: 3,
	//0xAB:	,	//	4/5
	0xAC: 3,
	0xAD: 3,
	0xAE: 3,
	//0xAF:	,	//	4/5
	0xB0: 3,
	0xB1: 3,
	0xB2: 3,
	//0xB3:	,	//	4/5
	0xB4: 3,
	0xB5: 3,
	0xB6: 3,
	//0xB7:	,	//	4/5
	0xB8: 3,
	0xB9: 3,
	0xBA: 3,
	//0xBB:	,	//	4/5
	0xBC: 3,
	0xBD: 3,
	0xBE: 3,
	//0xBF:	,	//	4/5
	0xC0: 3,
	0xC1: 3,
	0xC2: 3,
	//0xC3:	,	//	4/5
	0xC4: 3,
	0xC5: 3,
	0xC6: 3,
	//0xC7:	,	//	4/5
	0xC8: 2,
	0xC9: 3,
	0xCA: 2,
	//0xCB:	,	//	3/4
	0xCC: 2,
	0xCD: 3,
	0xCE: 2,
	//0xCF:	,	//	3/4
	0xD0: 2,
	0xD1: 2,
	0xD2: 2,
	0xD3: 2,
	0xD4: 2,
	0xD5: 2,
	0xD6: 2,
	0xD7: 2,
	0xD8: 2,
	0xD9: 2,
	0xDA: 2,
	0xDB: 2,
	0xDC: 2,
	0xDD: 2,
	0xDE: 2,
	0xDF: 2,
	0xE0: 3,
	0xE1: 3,
	0xE2: 4,
	0xE3: 2,
	0xE4: 3,
	//0xE5:	,	//	Reserved
	0xE6: 4,
	0xE7: 3,
	0xE8: 3,
	0xE9: 6,
	0xEA: 3,
	0xEB: 6,
	0xEC: 1,
	0xED: 1,
	//0xEE:	,	//	Reserved
	0xEF: 3,
	0xF0: 1,
	0xF1: 4,
	0xF2: 1,
	0xF3: 1,
	0xF4: 1,
	0xF5: 1,
	0xF6: 1,
	0xF7: 1,
	0xF8: 1,
	0xF9: 1,
	0xFA: 1,
	0xFB: 1,
	0xFC: 1,
	0xFD: 1,
	//0xFE:	,	// Multi
	0xFF: 1,
}

// byte to modes
var modes = map[byte]string{
	0x00: "direct",
	0x01: "direct",
	0x02: "direct",
	0x03: "direct",
	0x04: "",
	0x05: "",
	0x06: "",
	0x07: "",
	0x08: "direct/immediate",
	0x09: "direct/immediate",
	0x0A: "direct/immediate",
	0x0B: "indexed",
	0x0C: "direct/immediate",
	0x0D: "direct/immediate",
	0x0E: "direct/immediate",
	0x0F: "direct/immediate",
	0x10: "",
	0x11: "",
	0x12: "direct",
	0x13: "direct",
	0x14: "",
	0x15: "",
	0x16: "",
	0x17: "",
	0x18: "direct/immediate",
	0x19: "direct/immediate",
	0x1A: "direct/immediate",
	0x1B: "indexed",
	0x1C: "extended-indirect",
	0x1D: "extended-indexed",
	0x1E: "extended-indirect",
	0x1F: "extended-indexed",
	0x20: "indexed",
	0x21: "indexed",
	0x22: "indexed",
	0x23: "indexed",
	0x24: "indexed",
	0x25: "indexed",
	0x26: "indexed",
	0x27: "indexed",
	0x28: "indexed",
	0x29: "indexed",
	0x2A: "indexed",
	0x2B: "indexed",
	0x2C: "indexed",
	0x2D: "indexed",
	0x2E: "indexed",
	0x2F: "indexed",
	0x30: "indexed",
	0x31: "indexed",
	0x32: "indexed",
	0x33: "indexed",
	0x34: "indexed",
	0x35: "indexed",
	0x36: "indexed",
	0x37: "indexed",
	0x38: "indexed",
	0x39: "indexed",
	0x3A: "indexed",
	0x3B: "indexed",
	0x3C: "indexed",
	0x3D: "indexed",
	0x3E: "indexed",
	0x3F: "indexed",
	0x40: "direct",
	0x41: "immediate",
	0x42: "indirect",
	0x43: "indexed",
	0x44: "",
	0x45: "",
	0x46: "",
	0x47: "",
	0x48: "direct",
	0x49: "immediate",
	0x4A: "indirect",
	0x4B: "indexed",
	0x4C: "direct",
	0x4D: "immediate",
	0x4E: "indirect",
	0x4F: "indexed",
	0x50: "direct",
	0x51: "immediate",
	0x52: "indirect",
	0x53: "indexed",
	0x54: "direct",
	0x55: "immediate",
	0x56: "indirect",
	0x57: "indexed",
	0x58: "direct",
	0x59: "immediate",
	0x5A: "indirect",
	0x5B: "indexed",
	0x5C: "direct",
	0x5D: "immediate",
	0x5E: "indirect",
	0x5F: "indexed",
	0x60: "direct",
	0x61: "immediate",
	0x62: "indirect",
	0x63: "indexed",
	0x64: "direct",
	0x65: "immediate",
	0x66: "indirect",
	0x67: "indexed",
	0x68: "direct",
	0x69: "immediate",
	0x6A: "indirect",
	0x6B: "indexed",
	0x6C: "direct",
	0x6D: "immediate",
	0x6E: "indirect",
	0x6F: "indexed",
	0x70: "direct",
	0x71: "immediate",
	0x72: "indirect",
	0x73: "indexed",
	0x74: "direct",
	0x75: "immediate",
	0x76: "indirect",
	0x77: "indexed",
	0x78: "direct",
	0x79: "immediate",
	0x7A: "indirect",
	0x7B: "indexed",
	0x7C: "direct",
	0x7D: "immediate",
	0x7E: "indirect",
	0x7F: "indexed",
	0x80: "direct",
	0x81: "immediate",
	0x82: "indirect",
	0x83: "indexed",
	0x84: "direct",
	0x85: "immediate",
	0x86: "indirect",
	0x87: "indexed",
	0x88: "direct",
	0x89: "immediate",
	0x8A: "indirect",
	0x8B: "indexed",
	0x8C: "direct",
	0x8D: "immediate",
	0x8E: "indirect",
	0x8F: "indexed",
	0x90: "direct",
	0x91: "immediate",
	0x92: "indirect",
	0x93: "indexed",
	0x94: "direct",
	0x95: "immediate",
	0x96: "indirect",
	0x97: "indexed",
	0x98: "direct",
	0x99: "immediate",
	0x9A: "indirect",
	0x9B: "indexed",
	0x9C: "direct",
	0x9D: "immediate",
	0x9E: "indirect",
	0x9F: "indexed",
	0xA0: "direct",
	0xA1: "immediate",
	0xA2: "indirect",
	0xA3: "indexed",
	0xA4: "direct",
	0xA5: "immediate",
	0xA6: "indirect",
	0xA7: "indexed",
	0xA8: "direct",
	0xA9: "immediate",
	0xAA: "indirect",
	0xAB: "indexed",
	0xAC: "direct",
	0xAD: "immediate",
	0xAE: "indirect",
	0xAF: "indexed",
	0xB0: "direct",
	0xB1: "immediate",
	0xB2: "indirect",
	0xB3: "indexed",
	0xB4: "direct",
	0xB5: "immediate",
	0xB6: "indirect",
	0xB7: "indexed",
	0xB8: "direct",
	0xB9: "immediate",
	0xBA: "indirect",
	0xBB: "indexed",
	0xBC: "direct",
	0xBD: "immediate",
	0xBE: "indirect",
	0xBF: "indexed",
	0xC0: "",
	0xC1: "indirect",
	0xC2: "indirect",
	0xC3: "indexed",
	0xC4: "",
	0xC5: "",
	0xC6: "indirect",
	0xC7: "indexed",
	0xC8: "direct",
	0xC9: "immediate",
	0xCA: "indirect",
	0xCB: "indexed",
	0xCC: "direct",
	0xCD: "indirect",
	0xCE: "indirect",
	0xCF: "indexed",
	0xD0: "indexed",
	0xD1: "indexed",
	0xD2: "indexed",
	0xD3: "indexed",
	0xD4: "indexed",
	0xD5: "indexed",
	0xD6: "indexed",
	0xD7: "indexed",
	0xD8: "indexed",
	0xD9: "indexed",
	0xDA: "indexed",
	0xDB: "indexed",
	0xDC: "indexed",
	0xDD: "indexed",
	0xDE: "indexed",
	0xDF: "indexed",
	0xE0: "indexed",
	0xE1: "indexed",
	0xE2: "indexed",
	0xE3: "extended-indirect",
	0xE4: "extended-indirect",
	0xE5: "",
	0xE6: "extended-indexed",
	0xE7: "indexed",
	0xE8: "extended-indirect",
	0xE9: "extended-indexed",
	0xEA: "extended-indirect",
	0xEB: "extended-indexed",
	0xEC: "direct",
	0xED: "direct",
	0xEE: "",
	0xEF: "indexed",
	0xF0: "indirect",
	0xF1: "extended-indexed",
	0xF2: "direct",
	0xF3: "direct",
	0xF4: "direct",
	0xF5: "direct",
	0xF6: "immediate",
	0xF7: "direct",
	0xF8: "direct",
	0xF9: "direct",
	0xFA: "direct",
	0xFB: "direct",
	0xFC: "direct",
	0xFD: "direct",
	0xFE: "",
	0xFF: "direct",
}

// byte to description
var descriptions = map[byte]string{
	0x00: "Does nothing. Control passes to the next sequential instruction. This is actually a two-byte NOP in which the second byte can be any value and is simply ignored.",
	0x01: "Clears the value of the operand.",
	0x02: "Complements the value of the word operand (replaces each “1” with a “0” and each “0” with a “1”).",
	0x03: "Negates the value of the integer operand.",
	0x04: "",
	0x05: "",
	0x06: "",
	0x07: "",
	0x08: "",
	0x09: "",
	0x0A: "",
	0x0B: "",
	0x0C: "",
	0x0D: "",
	0x0E: "",
	0x0F: "",
	0x10: "",
	0x11: "",
	0x12: "",
	0x13: "",
	0x14: "",
	0x15: "",
	0x16: "",
	0x17: "",
	0x18: "",
	0x19: "",
	0x1A: "",
	0x1B: "",
	0x1C: "",
	0x1D: "",
	0x1E: "",
	0x1F: "",
	0x20: "",
	0x21: "",
	0x22: "",
	0x23: "",
	0x24: "",
	0x25: "",
	0x26: "",
	0x27: "",
	0x28: "",
	0x29: "",
	0x2A: "",
	0x2B: "",
	0x2C: "",
	0x2D: "",
	0x2E: "",
	0x2F: "",
	0x30: "",
	0x31: "",
	0x32: "",
	0x33: "",
	0x34: "",
	0x35: "",
	0x36: "",
	0x37: "",
	0x38: "",
	0x39: "",
	0x3A: "",
	0x3B: "",
	0x3C: "",
	0x3D: "",
	0x3E: "",
	0x3F: "",
	0x40: "",
	0x41: "",
	0x42: "",
	0x43: "",
	0x44: "",
	0x45: "",
	0x46: "",
	0x47: "",
	0x48: "",
	0x49: "",
	0x4A: "",
	0x4B: "",
	0x4C: "",
	0x4D: "",
	0x4E: "",
	0x4F: "",
	0x50: "",
	0x51: "",
	0x52: "",
	0x53: "",
	0x54: "",
	0x55: "",
	0x56: "",
	0x57: "",
	0x58: "",
	0x59: "",
	0x5A: "",
	0x5B: "",
	0x5C: "",
	0x5D: "",
	0x5E: "",
	0x5F: "",
	0x60: "",
	0x61: "",
	0x62: "",
	0x63: "",
	0x64: "",
	0x65: "",
	0x66: "",
	0x67: "",
	0x68: "",
	0x69: "",
	0x6A: "",
	0x6B: "",
	0x6C: "",
	0x6D: "",
	0x6E: "",
	0x6F: "",
	0x70: "",
	0x71: "",
	0x72: "",
	0x73: "",
	0x74: "",
	0x75: "",
	0x76: "",
	0x77: "",
	0x78: "",
	0x79: "",
	0x7A: "",
	0x7B: "",
	0x7C: "",
	0x7D: "",
	0x7E: "",
	0x7F: "",
	0x80: "",
	0x81: "",
	0x82: "",
	0x83: "",
	0x84: "",
	0x85: "",
	0x86: "",
	0x87: "",
	0x88: "",
	0x89: "",
	0x8A: "",
	0x8B: "",
	0x8C: "",
	0x8D: "",
	0x8E: "",
	0x8F: "",
	0x90: "",
	0x91: "",
	0x92: "",
	0x93: "",
	0x94: "",
	0x95: "",
	0x96: "",
	0x97: "",
	0x98: "",
	0x99: "",
	0x9A: "",
	0x9B: "",
	0x9C: "",
	0x9D: "",
	0x9E: "",
	0x9F: "",
	0xA0: "",
	0xA1: "",
	0xA2: "",
	0xA3: "",
	0xA4: "",
	0xA5: "",
	0xA6: "",
	0xA7: "",
	0xA8: "",
	0xA9: "",
	0xAA: "",
	0xAB: "",
	0xAC: "",
	0xAD: "",
	0xAE: "",
	0xAF: "",
	0xB0: "",
	0xB1: "",
	0xB2: "",
	0xB3: "",
	0xB4: "",
	0xB5: "",
	0xB6: "",
	0xB7: "",
	0xB8: "",
	0xB9: "",
	0xBA: "",
	0xBB: "",
	0xBC: "",
	0xBD: "",
	0xBE: "",
	0xBF: "",
	0xC0: "",
	0xC1: "",
	0xC2: "",
	0xC3: "",
	0xC4: "",
	0xC5: "",
	0xC6: "",
	0xC7: "",
	0xC8: "",
	0xC9: "",
	0xCA: "",
	0xCB: "",
	0xCC: "",
	0xCD: "",
	0xCE: "",
	0xCF: "",
	0xD0: "",
	0xD1: "",
	0xD2: "",
	0xD3: "",
	0xD4: "",
	0xD5: "",
	0xD6: "",
	0xD7: "",
	0xD8: "",
	0xD9: "",
	0xDA: "",
	0xDB: "",
	0xDC: "",
	0xDD: "",
	0xDE: "",
	0xDF: "",
	0xE0: "",
	0xE1: "",
	0xE2: "",
	0xE3: "",
	0xE4: "",
	0xE5: "",
	0xE6: "",
	0xE7: "",
	0xE8: "",
	0xE9: "",
	0xEA: "",
	0xEB: "",
	0xEC: "",
	0xED: "",
	0xEE: "",
	0xEF: "",
	0xF0: "",
	0xF1: "",
	0xF2: "",
	0xF3: "",
	0xF4: "",
	0xF5: "",
	0xF6: "",
	0xF7: "",
	0xF8: "",
	0xF9: "",
	0xFA: "",
	0xFB: "",
	0xFC: "",
	0xFD: "",
	0xFE: "",
	0xFF: "",
}
